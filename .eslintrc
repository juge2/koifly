{
  "parser": "babel-eslint",
  "env": {
    "browser": true,
    "node": true,
    "commonjs": true,
    "mocha": true,
    "es6": true
  },
  "plugins": [ "react" ],
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  // Shgared settings: https://eslint.org/docs/user-guide/configuring#adding-shared-settings
  "settings": {
    "react": {
      "pragma": "React",
      "version": "detect"
    }
  },
  // All eslint rules: http://eslint.org/docs/rules/
  // 0 = off, 1 = warning, 2 = error
  "rules": {
    "array-bracket-spacing": [1, "never", { "singleValue": true }],
    "array-callback-return": [1, { "allowImplicit": true }],
    // "arrow-body-style": [1, "as-needed"], // I'd like to have this enforced, maybe some day
    "arrow-parens": [1, "as-needed"],
    "arrow-spacing": [1, { "before": true, "after": true }],
    "block-spacing": [1, "always"],
    "brace-style": [1, "1tbs", { "allowSingleLine": false }],
    "camelcase": 1,
    "comma-dangle": [1, "never"], // in IE8 trailing commas will throw an exception
    "comma-spacing": [1, { "before": false, "after": true }],
    "comma-style": [2, "last"],
    "computed-property-spacing": [1, "never"],
    "consistent-this": [1, "self"],
    "constructor-super": 2,
    "curly": [1, "multi-line"],
    "dot-location": [2, "property"],
    "dot-notation": 1,
    "eol-last": 1,
    "eqeqeq": 1,
    "func-call-spacing": 1,
    "func-name-matching": 1,
    // "func-style": [1, "declaration", { "allowArrowFunctions": true }], // Enable when I rewrite all prototype object creation with classes
    "function-paren-newline": [1, "consistent"],
    "for-direction": 2,
    "getter-return": [2, { "allowImplicit": true }],
    "implicit-arrow-linebreak": [1, "beside"],
    "jsx-quotes": [1, "prefer-single"],
    "key-spacing": [1, { "beforeColon": false, "afterColon": true, "mode": "strict" }],
    "keyword-spacing": [1, { "before": true, "after": true }],
    "linebreak-style": [1, "unix"],
    "new-cap": 1,
    "new-parens": 1,
    // "no-alert": 1, // Enforce it once all deletion warnings will be displayed in proper modal
    "no-array-constructor": 1,
    "no-async-promise-executor": 2,
    "no-caller": 2,
    "no-class-assign": 2,
    "no-cond-assign": [2, "always"],
    "no-console": 1,
    "no-const-assign": 2,
    "no-constant-condition": 1,
    "no-control-regex": 2,
    "no-debugger": 1,
    "no-delete-var": 2,
    "no-div-regex": 2,
    "no-dupe-args": 2,
    "no-dupe-class-members": 2,
    "no-dupe-keys": 2,
    "no-duplicate-case": 2,
    "no-duplicate-imports": 2,
    "no-else-return": 1,
    "no-empty": 1,
    "no-empty-character-class": 2,
    "no-empty-pattern": 1,
    "no-eval": 2,
    "no-ex-assign": 2,
    "no-extra-bind": 1,
    "no-extra-boolean-cast": 1,
    "no-extra-semi": 1,
    "no-fallthrough": 1,
    "no-global-assign": 2,
    "no-floating-decimal": 1,
    "no-func-assign": 2,
    "no-implied-eval": 2,
    "no-inner-declarations": 1,
    "no-invalid-regexp": 2,
    "no-invalid-this": 2,
    "no-irregular-whitespace": 2,
    "no-label-var": 2,
    "no-labels": 2,
    "no-lone-blocks": 1,
    "no-lonely-if": 1,
    "no-loop-func": 2,
    "no-mixed-requires": 1,
    "no-mixed-spaces-and-tabs": 1,
    "no-multi-str": 1,
    "no-multiple-empty-lines": [1, { "max": 2 }],
    "no-multi-spaces": 1,
    "no-nested-ternary": 1,
    "no-new": 1,
    "no-new-func": 2,
    "no-new-object": 1,
    "no-new-require": 2,
    "no-new-wrappers": 2,
    "no-obj-calls": 2,
    "no-octal": 2,
    "no-octal-escape": 2,
    // "no-param-reassign": 1, // I'd like to have this enforced, maybe some day
    "no-path-concat": 1,
    "no-proto": 2,
    "no-redeclare": 1,
    "no-regex-spaces": 2,
    "no-return-await": 1,
    "no-script-url": 2,
    "no-self-compare": 1,
    "no-sequences": 2,
    "no-shadow": 2,
    "no-shadow-restricted-names": 2,
    "no-sparse-arrays": 2,
    "no-template-curly-in-string": 1,
    "no-this-before-super": 2,
    "no-throw-literal": 1,
    "no-trailing-spaces": [1, { "skipBlankLines": true }],
    "no-undef": 2,
    "no-undef-init": 1,
    "no-unexpected-multiline": 1,
    "no-unneeded-ternary": 1,
    "no-unreachable": 2,
    "no-unsafe-negation": 2,
    "no-unused-expressions": 1,
    "no-unused-vars": 1,
    "no-use-before-define": 1,
    "no-useless-call": 1,
    "no-useless-computed-key": 1,
    "no-useless-constructor": 1,
    "no-useless-escape": 1,
    "no-var": 1,
    "no-void": 2,
    "no-warning-comments": [1, {"terms": ["@nocommit"], "location": "anywhere"}],
    "no-whitespace-before-property": 1,
    "no-with": 2,
    "nonblock-statement-body-position": [2, "beside"],
    "object-curly-spacing": [1, "always"],
    "object-property-newline": [1, { "allowAllPropertiesOnSameLine": true }],
    "one-var": [1, { "uninitialized": "never", "initialized": "never" }],
    "operator-linebreak": [1, "after", { "overrides": { "?": "before", ":": "before" } }],
    "padded-blocks": [1, "never"],
    "prefer-arrow-callback": 1,
    "prefer-const": 1,
    "prefer-spread": 1,
    "quotes": [1, "single", "avoid-escape"],
    "require-atomic-updates": 2,
    "require-await": 2,
    "semi": 1,
    "semi-spacing": [1, { "before": false, "after": true }],
    "space-before-blocks": [1, "always"],
    "space-before-function-paren": [1, { "anonymous": "never", "named": "never", "asyncArrow": "always" }],
    "space-in-parens": [1, "never"],
    "space-infix-ops": 1,
    "space-unary-ops": [1, { "words": true, "nonwords": false }],
    "spaced-comment": [1, "always"],
    "use-isnan": 2,
    "valid-typeof": 2,
    "wrap-iife": [2, "inside"],
    "yoda": [1, "never"],

    // React plugin rules
    // Full list: https://github.com/yannickcr/eslint-plugin-react
    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/forbid-prop-types.md
    "react/boolean-prop-naming": [1, { "rule": "^(is|are|has|can|no)[A-Z]([A-Za-z0-9]?)+" }],
    "react/default-props-match-prop-types": [1, { "allowRequiredDefaults": false }],
    "react/jsx-boolean-value": [1, "always"],
    "react/jsx-closing-bracket-location": [1, "tag-aligned"],
    "react/jsx-curly-spacing": [1, "never"],
    "react/jsx-equals-spacing": [1, "never"],
    "react/jsx-indent": [1, 2, { "checkAttributes": true, "indentLogicalExpressions": true }],
    "react/jsx-indent-props": [1, 2],
    "react/jsx-max-props-per-line": [1, { "maximum": 4 }],
    "react/jsx-no-duplicate-props": [1, { "ignoreCase": true }],
    "react/jsx-no-undef": 2,
    "react/jsx-props-no-multi-spaces": 1,
    "react/jsx-tag-spacing": [1, {
      "closingSlash": "never",
      "beforeSelfClosing": "allow",
      "afterOpening": "never",
      "beforeClosing": "never"
    }],
    "react/jsx-uses-react": 1,
    "react/jsx-uses-vars": 1,
    "react/jsx-wrap-multilines": [1, {
      "declaration": "parens-new-line",
      "assignment": "parens-new-line",
      "return": "parens-new-line",
      "arrow": "parens-new-line",
      "condition": "parens-new-line",
      "logical": "parens-new-line",
      "prop": "parens-new-line"
    }],
    "react/no-direct-mutation-state": 2,
    "react/no-multi-comp": 1,
    "react/no-this-in-sfc": 2,
    "react/no-unescaped-entities": ["error", {"forbid": [">", "}"]}], // use '&gt;' and '&#125;' as alternative
    "react/no-unknown-property": 1,
    "react/no-unused-prop-types": 1,
    "react/no-unused-state": 1,
    "react/no-will-update-set-state": 2,
    "react/prefer-es6-class": 1,
    "react/prop-types": [1, { "ignore": ["children"] }],
    "react/react-in-jsx-scope": 1,
    "react/self-closing-comp": 1,
    "react/sort-comp": [1, {
      "order": [
        "lifecycle",
        "event-handlers",
        "everything-else",
        "rendering"
      ],
      "groups": {
        "lifecycle": [
          "constructor",
          "componentDidMount",
          "shouldComponentUpdate",
          "componentDidUpdate",
          "componentWillUnmount"
        ],
        "event-handlers": [
          "/^handle.+$/",
          "/^on.+$/"
        ],
        "rendering": [
          "/^render.+$/",
          "render"
        ]
      }
    }]
  }
}
